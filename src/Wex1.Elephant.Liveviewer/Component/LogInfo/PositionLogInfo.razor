
@using Wex1.Elephant.Liveviewer.Model
@using Wex1.Elephant.Liveviewer.Services
@using Wex1.Elephant.Liveviewer.Services.Interfaces

@inject NavigationManager NavigationManager


<div>
    <a class="btn btn-secondary mb-3" @onclick="GoBack">Back</a>
</div>
<h3>Position Log Information</h3>

@if (IsError)
{
    <div class="alert alert-danger" role="alert">
        @ErrorMessage
    </div>
}
else
{
@if (PositionLog != null)
{
    <div class="card">
        <div class="card-body">

            <dl class="row">
                <dt class="col-sm-3"><strong>Id:</strong></dt>
                <dd class="col-sm-9">@PositionLog.Id</dd>

                <dt class="col-sm-3"><strong>Timestamp:</strong></dt>
                <dd class="col-sm-9">@PositionLog.Timestamp.ToString()</dd>

                <dt class="col-sm-3"><strong>Type:</strong></dt>
                <dd class="col-sm-9">@PositionLog.Type</dd>

                <dt class="col-sm-3"><strong>Component:</strong></dt>
                <dd class="col-sm-9">@PositionLog.Component</dd>

                <dt class="col-sm-3"><strong>Description:</strong></dt>
                <dd class="col-sm-9">@PositionLog.Description</dd>

                <dt class="col-sm-3"><strong>Positions:</strong></dt>
                <dd class="col-sm-9">@PositionLog.PositionX X, @PositionLog.PositionY Y, @PositionLog.PositionZ Z </dd>

                
            </dl>
        </div>
    </div>

}
else
{
    <p>PositionLog not found.</p>
}
}

@code {
    [Parameter]
    public string Id { get; set; }

    private PositionLog PositionLog { get; set; }

    [Inject]
    private IApiPositionLogProvider _positionLogProvider { get; set; }

    private string ErrorMessage;
    private bool IsError;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsError = false;
            var positionLog = await _positionLogProvider.Get(Id);
            PositionLog = positionLog;
        }
        catch (Exception ex)
        {
            IsError = true;
            ErrorMessage = $"Positionlog could not be shown due to an error: \n {ex.Message}";

        }
    }
    private void GoBack()
    {
        NavigationManager.NavigateTo("/positionlogs");
    }
}
